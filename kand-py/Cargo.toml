[package]
name = "kand-py"
version = "0.2.2"
edition = "2024"
readme = "../README.md"
authors = ["CtrlX <gitctrlx@gmail.com>"]
description = "Kand: A Pure Rust technical analysis library inspired by TA-Lib."
license = "Apache-2.0 OR MIT"
repository = "https://github.com/rust-ta/kand"
documentation = "https://docs.rs/kand"
keywords = ["technical-analysis", "finance", "rust", "talib", "indicators"]
categories = ["finance", "algorithms", "data-structures", "science", "mathematics"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
name = "_kand"
crate-type = ["cdylib"]

[dependencies]
numpy = {workspace = true}
pyo3 = {workspace = true, features = ["extension-module"]}
kand = { workspace = true}

[features]
default = ["f32", "i64"]                  # Default: extended precision with basic checks
f32 = ["kand/f32"]                        # 32-bit floating point
f64 = ["kand/f64"]                        # 64-bit floating point
i32 = ["kand/i32"]                        # 32-bit integer
i64 = ["kand/i64"]                        # 64-bit integer
check = ["kand/check"]                    # Basic validation checks
check-nan = ["kand/check-nan"]            # Input NaN checks
allow-nan = ["kand/allow-nan"]            # Allow NaN values in output data
